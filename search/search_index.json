{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Terralens","text":"<p>See your Terraform state world with clarity and precision - TerraLens, your visual command center for infrastructure insight!</p>"},{"location":"#why","title":"Why?","text":"<p>I wanted to analyze statefiles across 100s of terraform roots present across mega mono repos and multiple poly repos to drive data driven decisions. On this journey, I did stumble upon terrabord which even though was a great project did not meet my needs as it required a more involved setup and direct access to terraform state storage (S3 buckets and dynamodb tables).</p> <p>I just wanted a simple CLI which can run in my local machine on a single terraform root and did not require direct access to terraform state storage (S3 buckets and dynamodb tables). Once that is in place, I can just use the full power of bash scripting to scale it across 100s of terraform roots to extract insights.</p>"},{"location":"getting-started/","title":"Getting started","text":""},{"location":"getting-started/#getting-started","title":"Getting started","text":"<p>Run the following command inside your terraform repository</p> <pre><code>terraform show -json | terralens\n</code></pre> <p>this shows a burn down list in descending order of the \"No. of resources\"</p> Resource name No. of resources 1 module.test_vpc 22 2 aws_s3_bucket 6 3 aws_secretsmanager_secret 5 4 aws_instance 1 <p>For more info on this view and other supported views checkout this page</p> <p>If you have any idea on the view you need for your state file level analysis, feel free to raise an issue</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#using-homebrew-mac-and-linux","title":"Using Homebrew (Mac and linux)","text":"<pre><code>brew install kishaningithub/tap/terralens\n</code></pre>"},{"location":"installation/#using-docker","title":"Using docker","text":"<pre><code>alias terralens=\"docker run -i ghcr.io/kishaningithub/terralens:latest\"\n\nterraform show -json | terralens\n</code></pre>"},{"location":"installation/#others","title":"Others","text":"<p>Head over to the releases page and download a binary for your platform.</p>"},{"location":"reference/","title":"Reference","text":"<pre><code>$ terralens -h\nSee your Terraform state world with clarity and precision - TerraLens, your visual command center for infrastructure insight!\n\nUsage:\n  terralens [flags]\n\nExamples:\n\n## Default usage (shows burn_down_list)\nterraform show -json | terralens\n\n## Show detailed burn down list\nterraform show -json | terralens --display burn_down_list_detailed\n\n\nFlags:\n  -d, --display string   must be one of burn_down_list,burn_down_list_detailed (default \"burn_down_list\")\n  -h, --help             help for terralens\n  -v, --version          version for terralens\n</code></pre>"},{"location":"views/","title":"Burn down list","text":""},{"location":"views/#command","title":"Command","text":"<pre><code>terraform show -json | terralens -d burn_down_list\n</code></pre>"},{"location":"views/#result","title":"Result","text":"<p>It shows a burn down list in descending order of the \"No. of resources\"</p> Resource name No. of resources 1 module.test_vpc 22 2 aws_s3_bucket 6 3 aws_secretsmanager_secret 5 4 aws_instance 1"},{"location":"views/#computation-logic","title":"Computation logic","text":"<p>For modules, the \"No. of resources\" column represents the number of resources created by that module. For example, if module.test_vpc is shown as 22 it means this module has 22 resources within it.</p> <p>For resource,the \"No. of resources\" column represents the number of resources. For example, if aws_s3_bucket is shown as 6 it means that there are 6 s3 buckets.</p>"},{"location":"views/burn-down-list-detailed/","title":"Burn down list detailed","text":""},{"location":"views/burn-down-list-detailed/#command","title":"Command","text":"<pre><code>terraform show -json | terralens -d burn_down_list\n</code></pre>"},{"location":"views/burn-down-list-detailed/#result","title":"Result","text":"Module Resource type No. of resources 1 lambda_module aws_iam_role_policy_attachment 2 2 lambda_module aws_iam_policy 1 3 lambda_module aws_lambda_function 1 4 lambda_module aws_iam_role 1 5 root aws_s3_bucket_public_access_block 6 6 root aws_s3_bucket 6 7 root aws_s3_bucket_policy 4"},{"location":"views/burn-down-list-detailed/#computation-logic","title":"Computation logic","text":"<p>The modules are first alphabetically sorted and within the module resources are sorted by the descending order of the \"No. of resources\".</p>"}]}